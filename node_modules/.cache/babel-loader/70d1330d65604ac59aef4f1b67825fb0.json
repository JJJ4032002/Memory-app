{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Github Projects/memory-game/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Pics from \"./Pics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  const [loading, setLoading] = useState(true);\n  const [picsArrived, setPicsArrived] = useState(false);\n  const [Error, setError] = useState(false);\n  let [ExampleArr, setExampleArr] = useState(0);\n  let ArrTotal = [];\n  let [splicedArr, setSplicedArr] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.pexels.com/v1/search/?page=1&per_page=80&query=flower\", {\n      headers: {\n        Authorization: \"563492ad6f917000010000010bbc2cb4ac214d6d8ecd66c450d9526c\"\n      }\n    }).then(resp => {\n      if (!resp.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n\n      return resp.json();\n    }).then(data => {\n      console.log(data);\n      ArrTotal = data.photos;\n      splicedArr = ArrTotal.splice(0, 12);\n      setSplicedArr(splicedArr);\n      console.log(splicedArr);\n      console.log(ArrTotal);\n      setPicsArrived(true);\n      setLoading(false);\n      console.log(\"use effect used\");\n    }).catch(e => {\n      console.log(e.message);\n      setLoading(false);\n      setError(true);\n    });\n  }, []);\n  let checkArr = [];\n  let arrToReplace = [];\n  useEffect(() => {\n    checkArr = [];\n    arrToReplace = [];\n    console.log(\"USE EFFECT\");\n  }, [splicedArr]);\n\n  function CheckUnique(index) {\n    if (checkArr.indexOf(index) === -1) {\n      checkArr.push(index);\n      return splicedArr[index];\n    } else {\n      let index = Math.floor(splicedArr.length * Math.random());\n      let elseVal = CheckUnique(index);\n      return elseVal;\n    }\n  }\n\n  function CurrentPic(e) {\n    console.log(e.target.parentNode.parentNode.id);\n  }\n\n  function changeOrder() {\n    for (let i = 0; i < splicedArr.length; i++) {\n      let index = Math.floor(splicedArr.length * Math.random());\n      console.log(index);\n\n      if (checkArr.length > splicedArr.length) {\n        break;\n      }\n\n      let uniqueArr = CheckUnique(index);\n      arrToReplace.push(uniqueArr);\n    }\n\n    splicedArr = arrToReplace;\n    console.log(arrToReplace);\n    setSplicedArr(splicedArr);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loadingHead\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), picsArrived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardsRendered\",\n      children: /*#__PURE__*/_jsxDEV(Pics, {\n        arr: splicedArr,\n        changeOrder: changeOrder,\n        checkPic: CurrentPic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), Error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loadingHead\",\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Cards;","map":{"version":3,"sources":["/home/rohan/Github Projects/memory-game/src/components/Cards.js"],"names":["React","useEffect","useState","Pics","Cards","loading","setLoading","picsArrived","setPicsArrived","Error","setError","ExampleArr","setExampleArr","ArrTotal","splicedArr","setSplicedArr","fetch","headers","Authorization","then","resp","ok","json","data","console","log","photos","splice","catch","e","message","checkArr","arrToReplace","CheckUnique","index","indexOf","push","Math","floor","length","random","elseVal","CurrentPic","target","parentNode","id","changeOrder","i","uniqueArr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA1C;AAEA,MAAIW,QAAQ,GAAG,EAAf;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,mEAAD,EAAsE;AACzEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EACX;AAFK;AADgE,KAAtE,CAAL,CAMGC,IANH,CAMSC,IAAD,IAAU;AACd,UAAI,CAACA,IAAI,CAACC,EAAV,EAAc;AACZ,cAAMZ,KAAK,CAAC,wCAAD,CAAX;AACD;;AACD,aAAOW,IAAI,CAACE,IAAL,EAAP;AACD,KAXH,EAYGH,IAZH,CAYSI,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,MAAAA,QAAQ,GAAGU,IAAI,CAACG,MAAhB;AACAZ,MAAAA,UAAU,GAAGD,QAAQ,CAACc,MAAT,CAAgB,CAAhB,EAAmB,EAAnB,CAAb;AACAZ,MAAAA,aAAa,CAACD,UAAD,CAAb;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAtBH,EAuBGG,KAvBH,CAuBUC,CAAD,IAAO;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,OAAd;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KA3BH;AA4BD,GA7BQ,EA6BN,EA7BM,CAAT;AA+BA,MAAIqB,QAAQ,GAAG,EAAf;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,GAAG,EAAX;AACAC,IAAAA,YAAY,GAAG,EAAf;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAJQ,EAIN,CAACX,UAAD,CAJM,CAAT;;AAMA,WAASmB,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIH,QAAQ,CAACI,OAAT,CAAiBD,KAAjB,MAA4B,CAAC,CAAjC,EAAoC;AAClCH,MAAAA,QAAQ,CAACK,IAAT,CAAcF,KAAd;AACA,aAAOpB,UAAU,CAACoB,KAAD,CAAjB;AACD,KAHD,MAGO;AACL,UAAIA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWxB,UAAU,CAACyB,MAAX,GAAoBF,IAAI,CAACG,MAAL,EAA/B,CAAZ;AACA,UAAIC,OAAO,GAAGR,WAAW,CAACC,KAAD,CAAzB;AACA,aAAOO,OAAP;AACD;AACF;;AAED,WAASC,UAAT,CAAoBb,CAApB,EAAuB;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACc,MAAF,CAASC,UAAT,CAAoBA,UAApB,CAA+BC,EAA3C;AACD;;AAED,WAASC,WAAT,GAAuB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,UAAU,CAACyB,MAA/B,EAAuCQ,CAAC,EAAxC,EAA4C;AAC1C,UAAIb,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWxB,UAAU,CAACyB,MAAX,GAAoBF,IAAI,CAACG,MAAL,EAA/B,CAAZ;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,UAAIH,QAAQ,CAACQ,MAAT,GAAkBzB,UAAU,CAACyB,MAAjC,EAAyC;AACvC;AACD;;AACD,UAAIS,SAAS,GAAGf,WAAW,CAACC,KAAD,CAA3B;AACAF,MAAAA,YAAY,CAACI,IAAb,CAAkBY,SAAlB;AACD;;AACDlC,IAAAA,UAAU,GAAGkB,YAAb;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACAjB,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGT,OAAO,iBAAI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,WAAW,iBACV;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,GAAG,EAAEO,UADP;AAEE,QAAA,WAAW,EAAEgC,WAFf;AAGE,QAAA,QAAQ,EAAEJ;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAWGjC,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAED,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pics from \"./Pics\";\n\nfunction Cards() {\n  const [loading, setLoading] = useState(true);\n  const [picsArrived, setPicsArrived] = useState(false);\n  const [Error, setError] = useState(false);\n  let [ExampleArr, setExampleArr] = useState(0);\n\n  let ArrTotal = [];\n  let [splicedArr, setSplicedArr] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.pexels.com/v1/search/?page=1&per_page=80&query=flower\", {\n      headers: {\n        Authorization:\n          \"563492ad6f917000010000010bbc2cb4ac214d6d8ecd66c450d9526c\",\n      },\n    })\n      .then((resp) => {\n        if (!resp.ok) {\n          throw Error(\"Could not fetch data for that resource\");\n        }\n        return resp.json();\n      })\n      .then((data) => {\n        console.log(data);\n        ArrTotal = data.photos;\n        splicedArr = ArrTotal.splice(0, 12);\n        setSplicedArr(splicedArr);\n        console.log(splicedArr);\n        console.log(ArrTotal);\n        setPicsArrived(true);\n        setLoading(false);\n        console.log(\"use effect used\");\n      })\n      .catch((e) => {\n        console.log(e.message);\n        setLoading(false);\n        setError(true);\n      });\n  }, []);\n\n  let checkArr = [];\n  let arrToReplace = [];\n\n  useEffect(() => {\n    checkArr = [];\n    arrToReplace = [];\n    console.log(\"USE EFFECT\");\n  }, [splicedArr]);\n\n  function CheckUnique(index) {\n    if (checkArr.indexOf(index) === -1) {\n      checkArr.push(index);\n      return splicedArr[index];\n    } else {\n      let index = Math.floor(splicedArr.length * Math.random());\n      let elseVal = CheckUnique(index);\n      return elseVal;\n    }\n  }\n\n  function CurrentPic(e) {\n    console.log(e.target.parentNode.parentNode.id);\n  }\n\n  function changeOrder() {\n    for (let i = 0; i < splicedArr.length; i++) {\n      let index = Math.floor(splicedArr.length * Math.random());\n      console.log(index);\n      if (checkArr.length > splicedArr.length) {\n        break;\n      }\n      let uniqueArr = CheckUnique(index);\n      arrToReplace.push(uniqueArr);\n    }\n    splicedArr = arrToReplace;\n    console.log(arrToReplace);\n    setSplicedArr(splicedArr);\n  }\n  return (\n    <div className=\"container\">\n      {loading && <h1 className=\"loadingHead\">Loading...</h1>}\n      {picsArrived && (\n        <div className=\"CardsRendered\">\n          <Pics\n            arr={splicedArr}\n            changeOrder={changeOrder}\n            checkPic={CurrentPic}\n          />\n        </div>\n      )}\n      {Error && <h1 className=\"loadingHead\">Error...</h1>}\n    </div>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Github Projects/memory-game/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  const [loading, setLoading] = useState(true);\n  const [picsArrived, setPicsArrived] = useState(false);\n  let ExampleArr = [\"heloo\", \"meh\", \"lame\", \"brother\", \"layman\"];\n  useEffect(() => {\n    setTimeout(() => {\n      setPicsArrived(true);\n      setLoading(false);\n      console.log(\"use effect used\");\n    }, 2000);\n  }, []);\n  let checkArr = [];\n  let arrToReplace = [];\n\n  function CheckUnique(index) {\n    if (checkArr.indexOf(index) === -1) {\n      checkArr.push(index);\n      return ExampleArr[index];\n    } else {\n      let index = Math.floor(ExampleArr.length * Math.random());\n      CheckUnique(index);\n    }\n  }\n\n  function changeOrder() {\n    for (let i = 0; i < ExampleArr.length; i++) {\n      let index = Math.floor(ExampleArr.length * Math.random());\n      console.log(index);\n      let uniqueArr = CheckUnique(index);\n      arrToReplace.push(uniqueArr);\n    }\n\n    console.log(arrToReplace);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loadingHead\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), picsArrived && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardsRendered\",\n      children: ExampleArr.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: changeOrder,\n          children: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Cards;","map":{"version":3,"sources":["/home/rohan/Github Projects/memory-game/src/components/Cards.js"],"names":["React","useEffect","useState","Cards","loading","setLoading","picsArrived","setPicsArrived","ExampleArr","setTimeout","console","log","checkArr","arrToReplace","CheckUnique","index","indexOf","push","Math","floor","length","random","changeOrder","i","uniqueArr","map","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,MAAIM,UAAU,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,QAApC,CAAjB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAJS,EAIP,IAJO,CAAV;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIH,QAAQ,CAACI,OAAT,CAAiBD,KAAjB,MAA4B,CAAC,CAAjC,EAAoC;AAClCH,MAAAA,QAAQ,CAACK,IAAT,CAAcF,KAAd;AACA,aAAOP,UAAU,CAACO,KAAD,CAAjB;AACD,KAHD,MAGO;AACL,UAAIA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWX,UAAU,CAACY,MAAX,GAAoBF,IAAI,CAACG,MAAL,EAA/B,CAAZ;AACAP,MAAAA,WAAW,CAACC,KAAD,CAAX;AACD;AACF;;AAED,WAASO,WAAT,GAAuB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,UAAU,CAACY,MAA/B,EAAuCG,CAAC,EAAxC,EAA4C;AAC1C,UAAIR,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWX,UAAU,CAACY,MAAX,GAAoBF,IAAI,CAACG,MAAL,EAA/B,CAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAIS,SAAS,GAAGV,WAAW,CAACC,KAAD,CAA3B;AACAF,MAAAA,YAAY,CAACI,IAAb,CAAkBO,SAAlB;AACD;;AACDd,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGT,OAAO,iBAAI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,WAAW,iBACV;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGE,UAAU,CAACiB,GAAX,CAAgBC,CAAD,IAAO;AACrB,4BAAO;AAAI,UAAA,OAAO,EAAEJ,WAAb;AAAA,oBAA2BI;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,eAAevB,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Cards() {\n  const [loading, setLoading] = useState(true);\n  const [picsArrived, setPicsArrived] = useState(false);\n  let ExampleArr = [\"heloo\", \"meh\", \"lame\", \"brother\", \"layman\"];\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPicsArrived(true);\n      setLoading(false);\n      console.log(\"use effect used\");\n    }, 2000);\n  }, []);\n\n  let checkArr = [];\n  let arrToReplace = [];\n  function CheckUnique(index) {\n    if (checkArr.indexOf(index) === -1) {\n      checkArr.push(index);\n      return ExampleArr[index];\n    } else {\n      let index = Math.floor(ExampleArr.length * Math.random());\n      CheckUnique(index);\n    }\n  }\n\n  function changeOrder() {\n    for (let i = 0; i < ExampleArr.length; i++) {\n      let index = Math.floor(ExampleArr.length * Math.random());\n      console.log(index);\n      let uniqueArr = CheckUnique(index);\n      arrToReplace.push(uniqueArr);\n    }\n    console.log(arrToReplace);\n  }\n  return (\n    <div className=\"container\">\n      {loading && <h1 className=\"loadingHead\">Loading...</h1>}\n      {picsArrived && (\n        <div className=\"CardsRendered\">\n          {ExampleArr.map((e) => {\n            return <h1 onClick={changeOrder}>{e}</h1>;\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}